@{
    ViewData["Title"] = "Login";
}

<script src="https://ok1static.oktacdn.com/assets/js/sdk/okta-signin-widget/2.14.0/js/okta-sign-in.min.js"
        type="text/javascript"></script>
<link href="https://ok1static.oktacdn.com/assets/js/sdk/okta-signin-widget/2.14.0/css/okta-sign-in.min.css"
      type="text/css"
      rel="stylesheet" />
<link href="https://ok1static.oktacdn.com/assets/js/sdk/okta-signin-widget/2.14.0/css/okta-theme.css"
      type="text/css"
      rel="stylesheet" />

<h2>Login</h2>

@if (!User.Identity.IsAuthenticated)
{
    <div id="okta-login-container"></div>
}

    <script type="text/javascript">
var oktaSignIn = new OktaSignIn({
    baseUrl: "https://dev-945913.okta.com",
    clientId: "0oabwsqbnlrdzsdzh356",
    logo: '@Url.Content("~/images/zura.png")',
    helpSupportNumber: '(555) 555-5555',
    language: 'en',
    i18n: {
        en: {
          'primaryauth.title': 'Sign in to JEF'
        }
    },
    features: {
        //registration: true,                 // Enable self-service registration flow
        //rememberMe: true,                   // Setting to false will remove the checkbox to save username
        //multiOptionalFactorEnroll: true,  // Allow users to enroll in multiple optional factors before finishing the authentication flow.
        //selfServiceUnlock: true,          // Will enable unlock in addition to forgotten password
        //smsRecovery: true,                // Enable SMS-based account recovery
        //callRecovery: true,               // Enable voice call-based account recovery
        //router: true,                       // Leave this set to true for the API demo
    },
    helpLinks: {
    help: 'https://jef.com/help'
    },
    authParams: {
      issuer: "https://dev-945913.okta.com/oauth2/default",
      responseType: ['token', 'id_token'],
      scopes: ['openid', 'email', 'profile'],
      display: 'page'
    }
    });
    if (oktaSignIn.token.hasTokensInUrl()) {
    oktaSignIn.token.parseTokensFromUrl(
      function success(res) {
        // The tokens are returned in the order requested by `responseType` above
        var accessToken = res[0];
        var idToken = res[1]

        // Say hello to the person who just signed in:
        console.log('Hello, ' + idToken.claims.email);

        // Save the tokens for later use, e.g. if the page gets refreshed:
        oktaSignIn.tokenManager.add('accessToken', accessToken);
        oktaSignIn.tokenManager.add('idToken', idToken);

        // Remove the tokens from the window location hash
        window.location.hash='';
        window.location="http://localhost:60611/Account/Login";
      },
      function error(err) {
        // handle errors as needed
        console.error(err);
      }
    );
    } else {
    oktaSignIn.session.get(function (res) {
      // Session exists, show logged in state.
      if (res.status === 'ACTIVE') {
        console.log('Welcome back, ' + res.login);
        window.location="http://localhost:60611/Account/Login";
        return;
      }
      // No session, show the login form
      oktaSignIn.renderEl(
        { el: '#okta-login-container' },
        function success(res) {
          // Nothing to do in this case, the widget will automatically redirect
          // the user to Okta for authentication, then back to this page if successful
        },
        function error(err) {
          // handle errors as needed
          console.error(err);
        }
      );
    });
}
    </script>
